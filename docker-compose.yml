version: '3.9'

networks:
  backend-network:
  minio_network:
    ipam:
      config:
        - subnet: 192.168.0.0/24

volumes:
  postgres:
  pgadmin-data:
  minio:


services:
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    restart: always
    networks:
      - backend-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  postgres:
    image: postgres:14
    restart: always
    networks:
      - backend-network
    ports:
      - '5432:5432'
    env_file:
      - .env
    environment:
      TZ: ${TZ}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - 'postgres:/var/lib/postgresql/data'


  minio:
    image: minio/minio:latest
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
      - minio:/root/.minio
    networks:
      minio_network:
        ipv4_address: 192.168.0.2
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
    command: server --address ":9099" --console-address ":9000" /data

  app:
    container_name: application_backend
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    command: npm run start
    ports:
      - "3000:3000"
    environment:
      POSTGRES_HOST: postgres
    volumes:
      - .:/usr/src/app

